#! /usr/bin/python

import ast
import time
import math


FILE_POS = '/sys/devices/platform/hdaps/position'

MEDIAL_BUFFER_SIZE = 9

RECORD_THRESHOLD = 5

def read():
  pos = open(FILE_POS).read()
  x, y = ast.literal_eval(pos)
  
  mov = math.sqrt(x * x + y * y)
  
  return mov  


median_buffer = []
median_buffer.append(read())
median_buffer.append(read())
median_buffer.append(read())
median_buffer.append(read())
median_buffer.append(read())
median_buffer.append(read())
median_buffer.append(read())
median_buffer.append(read())
median_buffer.append(read())

median_buffer_pos = 0

record_buffer = []
record_buffer.append((0, 0))

while True:
  time.sleep(0.5);
  
  mov = read()
  
  median_buffer[median_buffer_pos] = mov
  median_buffer_pos = (median_buffer_pos + 1) % MEDIAL_BUFFER_SIZE
  
  median = sorted(median_buffer)[(MEDIAL_BUFFER_SIZE + 1) / 2]
  
  if abs(record_buffer[-1][0] - median) > RECORD_THRESHOLD:
    print record_buffer[-1]
    record_buffer.append((median, 1))
    
  else:
    record_buffer[-1] = (record_buffer[-1][0], record_buffer[-1][1] + 1)
  
